import React, { useState, useEffect } from 'react';
import axios from 'axios';
import useGeolocation from './useGeolocation';

const WeatherComponent: React.FC = () => {
  const { coordinates, error: geolocationError } = useGeolocation();
  const [weatherData, setWeatherData] = useState<WeatherData | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchWeatherData = async (latitude: number, longitude: number) => {
      try {
        const apiKey = 'YOUR_API_KEY';
        const response = await axios.get(
          `https://api.weatherapi.com/v1/current.json?key=${apiKey}&q=${latitude},${longitude}`
        );
        setWeatherData(response.data);
      } catch (err) {
        setError('Failed to fetch weather data.');
      } finally {
        setLoading(false);
      }
    };

    if (coordinates) {
      fetchWeatherData(coordinates.latitude, coordinates.longitude);
    } else if (geolocationError) {
      setError(geolocationError);
      setLoading(false);
    }
  }, [coordinates, geolocationError]);

  if (loading) {
    return <div>Loading...</div>;
  }

  if (error) {
    return <div>{error}</div>;
  }

  if (!weatherData) {
    return null;
  }

  const { location, current } = weatherData;
  const weatherIconUrl = `https:${current.condition.icon}`;

  return (
    <div>
      <h2>Weather in {location.name}</h2>
      <p>Temperature: {current.temp_c}Â°C</p>
      <p>Condition: {current.condition.text}</p>
      <img src={weatherIconUrl} alt={current.condition.text} />
    </div>
  );
};

export default WeatherComponent;
